// this class belongs to network package
package network.incoming;

// import java classes
import controller.Node;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

/**
 * This class handles the connection with the reception
 */
public class NodeSocket extends Thread {

    // instance attribute
    private DedicatedNodeSocket dedicatedNodeSocket;
    private Node node;
    private int myPort;

    // socket for the client
    private Socket sClient;

    public NodeSocket(int myPort, Node node) {
        this.myPort = myPort;
        this.node = node;
    }


    /**
     * This method is generated by the thread start
     */
    @Override
    public void run() {
        try {
            // create our server socket
            ServerSocket serverSocket = new ServerSocket(myPort);

            // wait for the connection from a user, and create a dedicated server each time it's connected
            while (true){
                sClient = serverSocket.accept();
                if (sClient.isConnected()) {
                    generaNouServidorDedicat(sClient);
                }
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method generates a dedicated server with a given client socket
     * @param sClient Socket where the client is casting
     */
    private void generaNouServidorDedicat(Socket sClient){
        dedicatedNodeSocket = new DedicatedNodeSocket(sClient, node);
        // run the new thread
        dedicatedNodeSocket.start();
    }
}